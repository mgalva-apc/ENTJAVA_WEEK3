@model MyWebApp1.Models.ViewModel.UsersModel
@{
    ViewBag.Title = "MyProfile";
}
<head>
    <meta charset="utf-8">
    <link href="~/css/MyProfile.css" rel="stylesheet">
</head>
<body>
@foreach (var i in Model.Users)
        {
            <div class="welcomegreet">
                <h1>Welcome back, @Html.DisplayFor(m => i.FirstName)!</h1>
            </div>
        }
    <div class="container">
        <div class="leftside">
            @foreach (var i in Model.Users)
            {
                <div class="profilephoto">
                    @if (!string.IsNullOrEmpty(i.AccountImage))
                        {
                            <img id="pp" src="@i.AccountImage" alt="Account Image"/>
                        }
                </div>
                <div class="moredeets">
                    <p>@Html.DisplayFor(m => i.RoleName)</p>
                </div>
            }
        </div>
        <div id="rightside">
            @foreach (var i in Model.Users)
            {
                <div class="profdeets">
                    <p id="field">NAME:</p> 
                    <p id="input">@Html.DisplayFor(m => i.FirstName) @Html.DisplayFor(m => i.LastName)</p>
                    <p id="field">EMAIL:</p> 
                    <p id="input">@Html.DisplayFor(m => i.LoginName)</p>
                    <p id="field">GENDER:</p> 
                    <p id="input">@Html.DisplayFor(m => i.Gender)</p>
                    <a href="#" class="lnkEdit" data-userid="@i.UserID" data-login="@i.LoginName" data-firstname="@i.FirstName" data-lastname="@i.LastName" data-gender="@i.Gender" data-password="@i.Password">Change Details?</a>
                </div>
            }
        </div>
    </div>
    <div class="modal fade edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close close-modal" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="editId" />
                    <div class="form-group">
                        <label for="editLoginName">Login Name:</label>
                        <input type="text" class="form-control" id="editLoginName" readonly>
                    </div>
                    <div class="form-group">
                        <label for="editFirstName">First Name:</label>
                        <input type="text" class="form-control" id="editFirstName">
                    </div>
                    <div class="form-group">
                        <label for="editLastName">Last Name:</label>
                        <input type="text" class="form-control" id="editLastName">
                    </div>
                    <div class="form-group">
                        <label for="editGender">Gender:</label>
                        <select class="form-control" id="editGender">
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                            <option value="O">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editPassword">Password:</label>
                        <input type="text" class="form-control" id="editPassword">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-modal" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>
</body>
<!-- Add JQuery links -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        var editModal = $(".edit-modal");
        var editId = $("#editId");
        var editLoginName = $("#editLoginName");
        var editFirstName = $("#editFirstName");
        var editLastName = $("#editLastName");
        var editGender = $("#editGender");
        var editPassword = $("#editPassword");

        // Click event for "Edit" links
        $("#rightside").on("click", ".lnkEdit", function () {
            var userId = $(this).data("userid");
            var loginName = $(this).data("login");
            var firstName = $(this).data("firstname");
            var lastName = $(this).data("lastname");
            var gender = $(this).data("gender");
            var password = $(this).data("password");

            // Populate the modal with user data
            editId.val(userId);
            editLoginName.val(loginName);
            editFirstName.val(firstName);
            editLastName.val(lastName);
            editGender.val(gender);
            editPassword.val(password);

            // Show the modal
            editModal.modal("show");
        });

        // Click event for "Save Changes" button
        $("#saveChanges").click(function () {
        console.log("save clicked");
            // Create a JavaScript object with the updated user data
            var userData = {
                LoginName: editLoginName.val(),
                FirstName: editFirstName.val(),
                LastName: editLastName.val(),
                Gender: editGender.val(),
                Password: editPassword.val()
            };
            console.log(userData);
            // Perform your update logic here (e.g., call an API or submit a form)
            // Make an AJAX request to your API endpoint to update user information
            $.ajax({
                type: "PUT", // Use the appropriate HTTP method (PUT, POST, etc.) for your API
                url: "/account/update", // Replace with your API endpoint URL
                data: JSON.stringify(userData),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    // Handle the API response as needed
                    console.log("User updated successfully");
                    window.location.reload();
                },
                error: function (error) {
                    // Handle API error
                    console.error("Error updating user:", error);
                    window.location.reload();
                }
            });

            // Close the modal
            editModal.modal("hide");
        });

        // Click event for "Close" button
        $(".close-modal").click(function () {
            editModal.modal("hide");
        });

        $("#reloadTable").click(function () {
            reloadUserList();
        });

        var loadingSpinner = $("#loadingSpinner"); // Reference to the loading spinner

        // Click event for "Reload Table" button
        $("#reloadTable").click(function () {
            showLoadingSpinner(); // Show the loading spinner
            reloadUserList();
        });

        // Function to show the loading spinner
        function showLoadingSpinner() {
            loadingSpinner.show();
        }

        // Function to hide the loading spinner
        function hideLoadingSpinner() {
            loadingSpinner.hide();
        }

        // Function to reload the user list
        function reloadUserList() {
            // Make an AJAX request to reload the user list
            $.ajax({
                type: "GET", // Use the appropriate HTTP method for fetching the user list
                url: "/account/users", // Replace with your API endpoint URL to fetch the user list
                success: function (data) {
                    // Replace the user list container with the updated user list HTML
                    var $response = $(data);
                    var userListHtml = $response.find("#userListContainer tbody").html();

                    // Replace the user list container with the extracted HTML
                    $("#rightside").html(userListHtml);
                    hideLoadingSpinnerWithDelay(500); // Hide the loading spinner on success
                },
                error: function (error) {
                    console.error("Error fetching user list:", error);
                    hideLoadingSpinnerWithDelay(500); // Hide the loading spinner on error
                }
            });
        }

        function hideLoadingSpinnerWithDelay(delayMilliseconds) {
            setTimeout(function () {
                loadingSpinner.hide();
            }, delayMilliseconds);
        }
    });
</script>
